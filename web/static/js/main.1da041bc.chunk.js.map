{"version":3,"sources":["components/common/elements.tsx","constants/index.ts","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/index.ts","util/toast.ts","store/api/api.ts","store/actions/user.ts","components/login/index.tsx","components/home/title-bar.tsx","components/home/tab-bar.tsx","styles/card.ts","components/home/dashboard.tsx","styles/page.ts","styles/model.ts","components/home/account.tsx","components/common/radio-button.tsx","components/home/transfer.tsx","util/convert.ts","components/home/history.tsx","components/not-found/index.tsx","components/home/index.tsx","components/app-container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["View","styled","div","_templateObject","Image","_templateObject2","img","_templateObject3","TextInput","input","_templateObject4","Picker","textarea","_templateObject5","select","_templateObject6","Text","label","_templateObject7","DEFAULT_DATE_FORMAT","span","_templateObject8","DEFAULT_DATE_TIME_FORMAT","IMAGE_BASE_PATH","API_BASE_PATH","COLOR","Button","_this","this","react","type","className","value","props","title","onClick","onPress","style","Object","objectSpread2","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","logoInv","icon","logout","homeIcon","homeIconInv","notification","notificationInv","setting","settingInv","info","infoInv","workInProgress","members","membersInv","vehicle","vehicleInv","username","password","support","supportInv","visitors","visitorsInv","servent","serventInv","add","edit","delete","close","tick","cancel","mobile","email","addvertise","reminder","users","homes","blocks","search","datePicker","money","moneyInv","view","document","documentInv","menu","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","isNN","_input","isNNObject","length","undefined","json2Str","JSON","stringify","ex","jsError","_ex","_funName","console","log","Toast","success","msg","toast","fail","error","warn","warning","show","bgColor","textColor","Api","url","get","callback","fetch","post","data","patch","put","upload","token","clientId","userId","formData","regenerator_default","a","async","_context","prev","next","awrap","getAS","sent","FormData","append","file","name","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","toString","stop","key","_context2","sessionStorage","getItem","abrupt","t0","_context3","Content-Type","login","emailId","controller","result","user","setItem","_id","bitcoinWalletBalance","ethereumWalletBalance","register","description","updateAccountInfo","bitcoinWalletId","ethereumWalletId","maxAmountAllowed","transfer","currencyAmount","currencyType","sourceUserId","targetUserId","removeItem","Index","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLogin","state","setState","isLoading","location","reload","onCreateAccount","isCreate","uName","uDescription","uEmailId","uPassword","onRegister","toLowerCase","bind","assertThisInitialized","_this2","maxWidth","flexDirection","alignItems","justifyContent","marginBottom","flex","row","placeholder","CommonStyles","txtFull","onChange","event","target","button_Button","textAlign","txtIcon","txt","float","borderWidth","borderStyle","borderRadius","margin","spinner_Spinner","marginLeft","resizeMode","top","paddingLeft","TitleBar","confirmAlert","buttons","userName","titleBar","react_router_dom","to","titleText","padding","fontSize","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","paddingTop","paddingBottom","tab","tabImage","activeTab","container","borderBottomColor","borderBottomWidth","border-bottom-style","card","inner","Dashboard","content","cardStyles","history","push","ele","head","alignContent","paddingRight","alignSelf","font-weight","radio","display","radioText","radioActive","radioActiveText","saveBtn","Account","onSave","id","_this3","modelStyles","borderBottom","replace","RadioButton","checked","isActive","marginRight","circle","dot","Transfer","hasBalance","bitcoinbalance","parseInt","ethereumbalance","filter","d","map","i","radio_button_RadioButton","toDateTimeString","_format","moment","format","toDateString","History","loadTransfers","borderBottomStyle","createdAt","title_bar_TitleBar","react_router","path","exact","component","NotFound","tab_bar_TabBar","AppContainer","isLoggedIn","home_Index","login_Index","App","react_default","createElement","Fragment","app_container_AppContainer","lib","store","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1da041bc.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","// const API_BASE_PATH = 'http://10.0.2.2:3001/';\r\nconst API_BASE_PATH = 'http://10.100.41.97:3001/';\r\n// const API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n// const API_BASE_PATH = 'http://192.168.43.80:3001/';\r\n// const API_BASE_PATH = 'http://104.196.184.134:3001/';\r\n\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly logoInv = IMAGE_BASE_PATH + 'logo-inv.png';\r\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\r\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\r\n    static readonly homeIcon = IMAGE_BASE_PATH + 'home-icon.png';\r\n    static readonly homeIconInv = IMAGE_BASE_PATH + 'home-icon-inv.png';\r\n    static readonly notification = IMAGE_BASE_PATH + 'notification.png';\r\n    static readonly notificationInv = IMAGE_BASE_PATH + 'notification-inv.png';\r\n    static readonly setting = IMAGE_BASE_PATH + 'setting.png';\r\n    static readonly settingInv = IMAGE_BASE_PATH + 'setting-inv.png';\r\n    static readonly info = IMAGE_BASE_PATH + 'info.png';\r\n    static readonly infoInv = IMAGE_BASE_PATH + 'info-inv.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\r\n    static readonly membersInv = IMAGE_BASE_PATH + 'members-inv.png';\r\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\r\n    static readonly vehicleInv = IMAGE_BASE_PATH + 'vehicle-inv.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly support = IMAGE_BASE_PATH + 'support.png';\r\n    static readonly supportInv = IMAGE_BASE_PATH + 'support-inv.png';\r\n    static readonly visitors = IMAGE_BASE_PATH + 'visitors.png';\r\n    static readonly visitorsInv = IMAGE_BASE_PATH + 'visitors-inv.png';\r\n    static readonly servent = IMAGE_BASE_PATH + 'servent.png';\r\n    static readonly serventInv = IMAGE_BASE_PATH + 'servent-inv.png';\r\n    static readonly add = IMAGE_BASE_PATH + 'add.png';\r\n    static readonly edit = IMAGE_BASE_PATH + 'edit.png';\r\n    static readonly delete = IMAGE_BASE_PATH + 'delete.png';\r\n    static readonly close = IMAGE_BASE_PATH + 'close.png';\r\n    static readonly tick = IMAGE_BASE_PATH + 'tick.png';    \r\n    static readonly cancel = IMAGE_BASE_PATH + 'cancel.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly addvertise = IMAGE_BASE_PATH + 'addvertise.png';\r\n    static readonly reminder = IMAGE_BASE_PATH + 'reminder.png';\r\n    static readonly users = IMAGE_BASE_PATH + 'users.png';\r\n    static readonly homes = IMAGE_BASE_PATH + 'homes.png';\r\n    static readonly blocks = IMAGE_BASE_PATH + 'blocks.png';\r\n    static readonly search = IMAGE_BASE_PATH + 'search.png';\r\n    static readonly datePicker = IMAGE_BASE_PATH + 'date-picker.png';\r\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\r\n    static readonly moneyInv = IMAGE_BASE_PATH + 'money-inv.png';\r\n    static readonly view = IMAGE_BASE_PATH + 'view.png';\r\n    static readonly document = IMAGE_BASE_PATH + 'document.png';\r\n    static readonly documentInv = IMAGE_BASE_PATH + 'document-inv.png';\r\n    static readonly menu = IMAGE_BASE_PATH + 'menu.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","import Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'user';\r\n\r\nexport const login = (emailId: string, password: string, callback: (result: boolean, message: string) => void) => {\r\n    new Api().post(controller + '/' + 'login', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNNObject(result.data.user))\r\n      {\r\n        try {\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('user', result.data.user);\r\n          sessionStorage.setItem('user_id', result.data.user._id);\r\n          sessionStorage.setItem('user_name', result.data.user.name);\r\n          sessionStorage.setItem('user_bitcoinbalance', result.data.user.bitcoinWalletBalance);\r\n          sessionStorage.setItem('user_ethereumbalance', result.data.user.ethereumWalletBalance);\r\n        } catch (error) {\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      emailId: emailId,\r\n      password: password\r\n    });\r\n};\r\n\r\nexport const register = (name: string, description: string, emailId: string, password: string, callback: (result: boolean, message: string) => void) => {\r\n  new Api().post(controller + '/', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    description: description,\r\n    emailId: emailId,\r\n    password: password\r\n  });\r\n};\r\n\r\nexport const updateAccountInfo = (userId: string, bitcoinWalletId: string, bitcoinWalletBalance: number, ethereumWalletId: string, ethereumWalletBalance: number, maxAmountAllowed: number, callback: (result: boolean, message: string) => void) => {\r\n  new Api().put(controller + '/account/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    bitcoinWalletId: bitcoinWalletId,\r\n    bitcoinWalletBalance: bitcoinWalletBalance,\r\n    ethereumWalletId: ethereumWalletId,\r\n    ethereumWalletBalance: ethereumWalletBalance,\r\n    maxAmountAllowed: maxAmountAllowed\r\n  });\r\n};\r\n\r\nexport const transfer = (currencyAmount: number, currencyType: string, sourceUserId: string, targetUserId: string, callback: (result: boolean, message: string) => void) => {\r\n  new Api().post('transaction/', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    currencyAmount: currencyAmount,\r\n    currencyType: currencyType,\r\n    sourceUserId: sourceUserId,\r\n    targetUserId: targetUserId\r\n  });\r\n};\r\n\r\nexport const loadTransfers = (userId: string, callback: (result: Array<any>, message: string) => void) => {\r\n  new Api().get('transactions/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data as Array<any>, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadUsers = (callback: (result: Array<IUser>, message: string) => void) => {\r\n  new Api().get(controller + 's/', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data as Array<IUser>, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadUser = (id: string, callback: (result: IUser | null, message: string) => void) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data))\r\n    {\r\n      callback(result.data as IUser, '');\r\n    }else{\r\n      callback(null, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('user_bitcoinbalance');\r\n    sessionStorage.removeItem('user_ethereumbalance');\r\n    callback(true);\r\n};\r\n","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { login, register } from '../../store/actions/user';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n    emailId: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isCreate: boolean,\r\n    uName: string,\r\n\tuDescription: string,\r\n\tuEmailId: string,\r\n\tuPassword: string,\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            emailId: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isCreate: false,\r\n            uName: '',\r\n            uDescription: '',\r\n            uEmailId: '',\r\n            uPassword: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onRegister = this.onRegister.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.emailId) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            login(this.state.emailId, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                    document.location.reload(true);\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Email Id and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isCreate: true,\r\n            uName: '',\r\n            uDescription: '',\r\n            uEmailId: '',\r\n            uPassword: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onRegister = () => {\r\n        if(isNN(this.state.uName) && isNN(this.state.uDescription) && isNN(this.state.uEmailId) && isNN(this.state.uPassword)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            register(this.state.uName, this.state.uDescription, this.state.uEmailId.toLowerCase(), this.state.uPassword, (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Registered successfully now login with your email id and password.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isCreate: false,\r\n                        password: '',\r\n                        uName: '',\r\n                        uDescription: '',\r\n                        uEmailId: '',\r\n                        uPassword: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter all the fields to continue.');\r\n        }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {!this.state.isCreate ?\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Email Id' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12 center' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>REGISTER HERE</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                :\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Name' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uName} onChange={(event: any) => this.setState({uName: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Description' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Email Id' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uEmailId} onChange={(event: any) => this.setState({uEmailId: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='password' className='form-control' placeholder='Password' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uPassword} onChange={(event: any) => this.setState({uPassword: event.target.value})} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Submit\" : \"Loading...\"}\r\n                    onPress={this.onRegister}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isCreate: false,\r\n                                uName: \"\",\r\n                                uDescription: \"\",\r\n                                uEmailId: \"\",\r\n                                uPassword: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 3,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    },\r\n    txtFull: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    }\r\n};","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { Text, Image } from '../common/elements';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport { logout } from '../../store/actions/user';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            logout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n                document.location.reload(true);\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() { \r\n    let userName = sessionStorage.getItem('user_name');\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logoInv} className='' style={{ width: 22, height: 22}} />\r\n        </Link>\r\n          <Text className='fl' style={{marginLeft: '10px'}}>Transaction Management Portal</Text>\r\n          <Text style={styles.titleText}>{'Hi ' + userName + ' welcome!!!'}</Text>\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    width: '100%',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    fontSize: 15\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Transaction Management Protal</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: 25,\r\n    height: 25,\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { View, TouchableHighlight, Image, Text } from '../common/elements';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { loadUsers } from '../../store/actions/user';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('account')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    Account Info\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('transfer')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    Make Transfer\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('history')}>\r\n                  <Image src={Images.servent} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  View History\r\n                  </View>\r\n                </View>\r\n              </View>\r\n        </View>\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { IUser } from '../../models/user';\r\nimport { loadUser, updateAccountInfo } from '../../store/actions/user';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  userId: string,\r\n  bitcoinWalletId: string,\r\n\tbitcoinWalletBalance: number,\r\n\tethereumWalletId: string,\r\n\tethereumWalletBalance: number,\r\n\tmaxAmountAllowed: number\r\n};\r\n\r\nexport default class Account extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      userId: '',\r\n      bitcoinWalletId: '',\r\n      bitcoinWalletBalance: 0,\r\n      ethereumWalletId: '',\r\n      ethereumWalletBalance: 0,\r\n      maxAmountAllowed: 0\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId: string | null = sessionStorage.getItem('user_id');\r\n    this.setState({\r\n      userId: userId ? userId : ''\r\n    });\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadUser(userId ? userId : '', (result: IUser| null, message: string) => {\r\n      if(result !== null) {\r\n        this.setState({\r\n          isLoading: false,\r\n          bitcoinWalletId: result.bitcoinWalletId,\r\n          bitcoinWalletBalance: result.bitcoinWalletBalance,\r\n          ethereumWalletId: result.bitcoinWalletId,\r\n          ethereumWalletBalance: result.ethereumWalletBalance,\r\n          maxAmountAllowed: result.maxAmountAllowed\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.userId) && this.state.bitcoinWalletBalance > 0 && isNN(this.state.bitcoinWalletId) && isNN(this.state.ethereumWalletId) && this.state.ethereumWalletBalance > 0 && this.state.maxAmountAllowed > 0){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        updateAccountInfo(this.state.userId, this.state.bitcoinWalletId, this.state.bitcoinWalletBalance, this.state.ethereumWalletId, this.state.ethereumWalletBalance, this.state.maxAmountAllowed, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            Toast.success('Transaction initiated successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to initiate transaction.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n        <View style={{...modelStyles.row, marginBottom: 25, borderBottom: '1px solid ' + COLOR.HR_COLOR}}>\r\n          <Link to='' className='pointer m10'>\r\n            Home\r\n          </Link>\r\n          <Link to='account' className='pointer m10'>\r\n            Account Info\r\n          </Link>\r\n          <Link to='transfer' className='pointer m10'>\r\n            Make Transfer\r\n          </Link>\r\n          <Link to='history' className='pointer m10'>\r\n            View History\r\n          </Link>\r\n        </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Bitcoin Wallet Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.bitcoinWalletId} onChange={(event: any) => this.setState({bitcoinWalletId: event.target.value})} />\r\n          </View>         \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Bitcoin Wallet Balance\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.bitcoinWalletBalance > 0 ? this.state.bitcoinWalletBalance : ''} onChange={(event: any) => this.setState({bitcoinWalletBalance: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Ethereum Wallet Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.ethereumWalletId} onChange={(event: any) => this.setState({ethereumWalletId: event.target.value})} />\r\n          </View>         \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Ethereum Wallet Balance\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.ethereumWalletBalance > 0 ? this.state.ethereumWalletBalance : ''} onChange={(event: any) => this.setState({ethereumWalletBalance: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Max Amount Allowed\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.maxAmountAllowed > 0 ? this.state.maxAmountAllowed : ''} onChange={(event: any) => this.setState({maxAmountAllowed: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput, Picker, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { IUser } from '../../models/user';\r\nimport { loadUsers, transfer } from '../../store/actions/user';\r\nimport RadioButton from '../common/radio-button';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  users: Array<IUser>,\r\n  isLoading: boolean,\r\n  currencyAmount: number,\r\n\tcurrencyType: string,\r\n\tsourceUserId: string,\r\n\ttargetUserId: string,\r\n};\r\n\r\nexport default class Transfer extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      isLoading: false,\r\n      currencyAmount: 0,\r\n      currencyType: 'BITCOIN',\r\n      sourceUserId: '',\r\n      targetUserId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId: string | null = sessionStorage.getItem('user_id');\r\n    this.setState({\r\n      sourceUserId: userId ? userId : ''\r\n    });\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadUsers((result: Array<IUser>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        users: result\r\n      });\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.currencyType) && this.state.currencyAmount > 0 && isNN(this.state.sourceUserId) && isNN(this.state.targetUserId) && this.state.sourceUserId !== this.state.targetUserId){\r\n      let hasBalance: boolean = false;\r\n      if(this.state.currencyType == 'BITCOIN'){\r\n        let bitcoinbalance: string | null = sessionStorage.getItem('user_bitcoinbalance');\r\n        hasBalance = (bitcoinbalance && parseInt(bitcoinbalance) >= this.state.currencyAmount) ? true : false;\r\n      }else{\r\n        let ethereumbalance: string | null = sessionStorage.getItem('user_ethereumbalance');\r\n        hasBalance = (ethereumbalance && parseInt(ethereumbalance) >= this.state.currencyAmount) ? true : false;\r\n      }\r\n      if(hasBalance){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        transfer(this.state.currencyAmount, this.state.currencyType, this.state.sourceUserId, this.state.targetUserId, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              currencyAmount: 0,\r\n              currencyType: 'BITCOIN',\r\n              sourceUserId: '',\r\n              targetUserId: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Transaction initiated successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to initiate transaction.');\r\n          }\r\n        });\r\n      }else{\r\n          Toast.warn('Insufficient balance in your ' + this.state.currencyType + ' account. Please update the balance and then transfer.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n        <View style={{...modelStyles.row, marginBottom: 25, borderBottom: '1px solid ' + COLOR.HR_COLOR}}>\r\n          <Link to='' className='pointer m10'>\r\n            Home\r\n          </Link>\r\n          <Link to='account' className='pointer m10'>\r\n            Account Info\r\n          </Link>\r\n          <Link to='transfer' className='pointer m10'>\r\n            Make Transfer\r\n          </Link>\r\n          <Link to='history' className='pointer m10'>\r\n            View History\r\n          </Link>\r\n        </View>\r\n          <View style={modelStyles.row}>\r\n          <Picker\r\n            className='form-control'\r\n            value={this.state.targetUserId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({ targetUserId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select a Person to Transfer</option>\r\n              {this.state.users &&\r\n                this.state.users.filter(d => d._id !== this.state.sourceUserId).map((d: IUser, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>        \r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.currencyType === 'BITCOIN'} text='Bitcoin' onPress={() => this.setState({currencyType: 'BITCOIN'})} />\r\n            <RadioButton isActive={this.state.currencyType === 'ETHEREUM'} text='Ethereum' onPress={() => this.setState({currencyType: 'ETHEREUM'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Currency Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.currencyAmount > 0 ? this.state.currencyAmount : '' } onChange={(event: any) => this.setState({currencyAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View> \r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput, Picker, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport { loadTransfers } from '../../store/actions/user';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  data: Array<any>,\r\n  userId: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      userId: '',\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId: string | null = sessionStorage.getItem('user_id');\r\n    this.setState({\r\n      userId: userId ? userId : ''\r\n    });\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadTransfers(userId ? userId : '', (result: Array<any>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result.filter(d => d.sourceUserId === this.state.userId || d.targetUserId === this.state.userId)\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n        <View style={{...modelStyles.row, marginBottom: 25, borderBottom: '1px solid ' + COLOR.HR_COLOR}}>\r\n          <Link to='' className='pointer m10'>\r\n            Home\r\n          </Link>\r\n          <Link to='account' className='pointer m10'>\r\n            Account Info\r\n          </Link>\r\n          <Link to='transfer' className='pointer m10'>\r\n            Make Transfer\r\n          </Link>\r\n          <Link to='history' className='pointer m10'>\r\n            View History\r\n          </Link>\r\n        </View>\r\n        {\r\n          isNN(this.state.data) ?\r\n          this.state.data.map((d: any, i: number) => {\r\n            return(\r\n              <View key={i} style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n                 <View>\r\n                   <Text style={{flex: 1, fontWeight: 'bold', color: this.state.userId === d.sourceUserId ? COLOR.ERROR : COLOR.SUCCESS}}>{this.state.userId === d.sourceUserId ? 'SEND' : 'RECEIVED'}</Text>\r\n                </View>\r\n                <View>\r\n                  Amount: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.currencyAmount}</Text>\r\n                </View>\r\n                <View>\r\n                  Currency Type: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.currencyType}</Text>\r\n                </View>\r\n                <View>\r\n                  To: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.targetUserId}</Text>\r\n                </View>\r\n                <View>\r\n                  On: <Text style={{flex: 1, fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {d.state &&\r\n                <View>\r\n                  Status: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.state}</Text>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text>No Transactions found!!!</Text>   \r\n        }\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View } from '../common/elements';\r\nimport TitleBar from './title-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR } from '../../constants';\r\nimport Dashboard from './dashboard';\r\nimport Account from './account';\r\nimport Transfer from './transfer';\r\nimport History from './history';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TitleBar history={this.props.history} />\r\n          <Switch>\r\n            <Route path={'/'} exact component={Dashboard} />\r\n            <Route path={'/account'} exact component={Account} />\r\n            <Route path={'/transfer'} exact component={Transfer} />\r\n            <Route path={'/history'} exact component={History} />     \r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        <TabBar />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Login from '../components/login';\r\nimport Home from '../components/home';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  isLoggedIn: boolean\r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.setState({\r\n        isLoggedIn: true\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.state.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home history={this.props.history} />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","\r\nimport React from 'react';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport AppContainer from './components/app-container';\r\n// import FCM from './services/fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\nimport * as history  from 'history';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return(<>\r\n            <AppContainer history={history.createBrowserHistory()} />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </>      \r\n        )\r\n    }\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}