{"version":3,"sources":["components/common/elements.tsx","constants/index.ts","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/index.ts","util/toast.ts","store/api/api.ts","store/actions/user.ts","components/login/index.tsx","components/home/title-bar.tsx","components/home/tab-bar.tsx","styles/card.ts","components/home/dashboard.tsx","styles/page.ts","styles/model.ts","components/home/account.tsx","components/common/radio-button.tsx","components/home/transfer.tsx","util/convert.ts","components/home/history.tsx","components/not-found/index.tsx","components/home/index.tsx","components/app-container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["View","styled","div","_templateObject","Image","_templateObject2","img","_templateObject3","TextInput","input","_templateObject4","Picker","textarea","_templateObject5","select","_templateObject6","Text","label","_templateObject7","API_BASE_PATH","span","_templateObject8","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","IMAGE_BASE_PATH","COLOR","Button","_this","this","react","type","className","value","props","title","onClick","onPress","style","Object","objectSpread2","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","icon","logout","members","vehicle","username","password","servent","money","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","isNN","_input","isNNObject","length","undefined","json2Str","JSON","stringify","ex","jsError","_ex","_funName","console","log","Toast","success","msg","toast","fail","error","warn","warning","info","show","bgColor","textColor","Api","url","get","callback","fetch","post","data","delete","patch","put","upload","token","clientId","userId","formData","regenerator_default","a","async","_context","prev","next","awrap","getAS","sent","FormData","append","file","name","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","toString","stop","key","_context2","sessionStorage","getItem","abrupt","t0","_context3","Content-Type","login","emailId","controller","result","user","setItem","_id","bitcoinWalletBalance","ethereumWalletBalance","register","description","updateAccountInfo","bitcoinWalletId","ethereumWalletId","maxAmountAllowed","transfer","currencyAmount","currencyType","sourceUserId","targetUserId","removeItem","Index","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLogin","state","setState","isLoading","document","location","reload","onCreateAccount","isCreate","uName","uDescription","uEmailId","uPassword","onRegister","toLowerCase","bind","assertThisInitialized","_this2","maxWidth","flexDirection","alignItems","justifyContent","marginBottom","flex","row","placeholder","CommonStyles","txtFull","onChange","event","target","button_Button","textAlign","txtIcon","txt","float","borderWidth","borderStyle","borderRadius","margin","spinner_Spinner","marginLeft","resizeMode","top","paddingLeft","TitleBar","confirmAlert","buttons","userName","titleBar","react_router_dom","to","titleText","padding","fontSize","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","paddingTop","paddingBottom","tab","tabImage","activeTab","container","borderBottomColor","borderBottomWidth","border-bottom-style","card","inner","Dashboard","content","cardStyles","history","push","ele","head","alignContent","paddingRight","alignSelf","font-weight","close","radio","display","radioText","radioActive","radioActiveText","saveBtn","Account","onSave","id","_this3","modelStyles","borderBottom","replace","RadioButton","checked","isActive","marginRight","circle","dot","Transfer","hasBalance","bitcoinbalance","parseInt","ethereumbalance","users","filter","d","map","i","radio_button_RadioButton","toDateTimeString","_format","moment","format","toDateString","History","loadTransfers","borderBottomStyle","createdAt","title_bar_TitleBar","react_router","path","exact","component","NotFound","tab_bar_TabBar","AppContainer","isLoggedIn","home_Index","login_Index","App","react_default","createElement","Fragment","app_container_AppContainer","lib","store","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"62BAEO,IAAMA,EAAOC,IAAOC,IAAVC,KAOJC,GAJaH,IAAOC,IAAVG,KAIFJ,IAAOK,IAAVC,MAGLC,EAAYP,IAAOQ,MAAVC,KAMTC,GAHWV,IAAOW,SAAVC,KAGCZ,IAAOa,OAAVC,MAGNC,EAAOf,IAAOgB,MAAVC,KCrBXC,GDwB4BlB,IAAOmB,KAAVC,KCxBT,oCACTC,EAAsB,cACtBC,EAA2B,sBAG3BC,EAAkBL,EAAgB,SAElCM,EACA,UADAA,EAEE,UAFFA,EAGA,UAHAA,EAIF,UAJEA,EAKA,UALAA,EAUC,UAVDA,EAYI,UAZJA,EAaI,UCRIC,mLAMV,IAAAC,EAAAC,KACP,OACEC,EAAA,uBAAOC,KAAK,SAASC,UAAU,MAAMC,MAAOJ,KAAKK,MAAMC,MAAOC,QAAS,kBAAMR,EAAKM,MAAMG,WAAWC,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAME,EAAOC,IAAb,GAAqBb,KAAKK,MAAMI,gBAR1GK,aAAfhB,EACZiB,aAAuB,CAC5BT,MAAO,GACPE,QAAS,aACTC,MAAO,IASX,IAAMG,EAAS,CACbC,IAAK,CACHG,gBAAiBnB,EACjBoB,YAAapB,EACbqB,MAAOrB,EACPsB,OAAQ,YC5BSC,sCACDC,KAAOzB,EAAkB,WADxBwB,EAEDE,KAAO1B,EAAkB,WAFxBwB,EAGDG,OAAS3B,EAAkB,aAH1BwB,EAIDI,QAAU5B,EAAkB,cAJ3BwB,EAKDK,QAAU7B,EAAkB,cAL3BwB,EAMDM,SAAW9B,EAAkB,eAN5BwB,EAODO,SAAW/B,EAAkB,eAP5BwB,EAQDQ,QAAUhC,EAAkB,cAR3BwB,EASDS,MAAQjC,EAAkB,YATzBwB,EAUDU,QAAUlC,EAAkB,kBCC3BmC,mLAMjB,OACE/B,KAAKK,MAAM2B,SACX/B,EAAA,cAAC7B,EAAD,KACE6B,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,mBAChBF,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,UACdF,EAAA,cAACzB,EAAD,CAAO2B,UAAU,GAAG8B,IAAKb,EAAOU,QAASrB,MAAO,CAACyB,MAAO,OAAQC,OAAQ,UACxElC,EAAA,cAAC7B,EAAD,CAAMqC,MAAO,CAACS,MAAOrB,EAAiBuC,WAAY,OAAQC,UAAW,IAAKrC,KAAKK,MAAMiC,eAZ1DxB,aAAhBiB,EACZhB,aAAuB,CAC5BiB,SAAS,EACTM,KAAM,cChBH,IAAM1B,EACA,GCKN,SAAS2B,EAAKC,GACnB,OAAQC,EAAWD,IAAWA,EAAOE,OAAS,EAGzC,SAASD,EAAWD,GACzB,OAAmB,OAAXA,QAA8BG,IAAXH,EAYtB,SAASI,EAASJ,GACvB,IACE,OAAQC,EAAWD,GAAUK,KAAKC,UAAUN,GAAU,GACtD,MAAOO,GAEP,OADAC,EAAQD,EAAI,eACL,IAqCJ,SAASC,EAAQC,EAAUC,GAE/BC,QAAQC,IAAI,SAAWF,EAAW,IAAMD,OCjEpCI,sCACGC,QAAU,SAACC,GAEdC,cAAMF,QAAQC,IAHdF,EAKII,KAAO,SAACF,GAEXC,cAAME,MAAMH,IAPbF,EASIM,KAAO,SAACJ,GAEXC,cAAMI,QAAQL,IAXfF,EAaIQ,KAAO,SAACN,GAEXC,cAAMK,KAAKN,IAfZF,EAiBIS,KAAO,SAACP,EAAaQ,EAAiBC,GAEzCR,cAAMK,KAAKN,IA8BJF,4BC/CMY,oDACTC,IPDY3E,wCOWb4E,IAAM,SAACD,EAAaE,GACvBrE,EAAKsE,MAAMH,EAAK,MAAOE,SAQpBE,KAAO,SAACJ,EAAaE,EAAoBG,GAC5CxE,EAAKsE,MAAMH,EAAK,OAAQE,EAAUG,SAQ/BC,OAAS,SAACN,EAAaE,EAAoBG,GAC9CxE,EAAKsE,MAAMH,EAAK,SAAUE,EAAUG,SASjCE,MAAQ,SAACP,EAAaE,EAAoBG,GAC7CxE,EAAKsE,MAAMH,EAAK,QAASE,EAAUG,SAShCG,IAAM,SAACR,EAAaE,EAAoBG,GAC3CxE,EAAKsE,MAAMH,EAAK,MAAOE,EAAUG,SAG9BI,OAAS,SAAMT,EAAaE,EAAoBG,GAAvC,IAAAK,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,GAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,GAAAC,EAAAK,MACMvF,EAAKwF,MAAM,eADjB,cACRX,EADQO,EAAAK,KAAAL,EAAAE,KAAA,EAAAL,GAAAC,EAAAK,MAESvF,EAAKwF,MAAM,cAFpB,cAERV,EAFQM,EAAAK,KAAAL,EAAAE,KAAA,EAAAL,GAAAC,EAAAK,MAGOvF,EAAKwF,MAAM,YAHlB,OAGRT,EAHQK,EAAAK,MAKRT,EAAW,IAAIU,UACVC,OAAO,OAAQnB,EAAKoB,KAAMpB,EAAKqB,MACxCb,EAASW,OAAO,OAAQnB,EAAKqB,MAE7BvB,MAAMtE,EAAKmE,IAAMA,EAAK,CACd2B,OAAQ,OACRC,QAAS,CACLC,OAAU,mBAEVC,iBAAmBzD,EAAKqC,GAAS,UAAYA,EAAQ,GACrDqB,YAAc1D,EAAKsC,GAAY,GAAKA,EAAW,GAC/CqB,UAAY3D,EAAKuC,GAAU,GAAKA,EAAS,IAE7CqB,KAAMpB,IACPqB,KAAK,SAAAC,GACJ,OAAOA,EAASC,SACjBF,KAAK,SAACC,GACF5D,EAAW4D,GACP5D,EAAW4D,EAAS9B,MACnBxE,EAAKqE,SAASA,EAAUiC,EAAU,sDAElCtG,EAAKqE,SAASA,EAAU,KAAMiC,EAASE,SAY3CxG,EAAKqE,SAASA,EAAU,KAAM,wDAEnCoC,MAAM,SAAC9C,GACNP,QAAQC,IAAI,MAAOM,GACnB3D,EAAKqE,SAASA,EAAU,KAAMV,EAAM+C,cA1ChC,yBAAAtB,EAAAuB,gBA6DRnB,MAAQ,SAAOoB,GAAP,OAAA3B,GAAAC,EAAAC,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAL,GAAAC,EAAAK,MAGKuB,eAAeC,QAAQH,IAH5B,cAAAC,EAAAG,OAAA,SAAAH,EAAApB,MAAA,cAAAoB,EAAAxB,KAAA,EAAAwB,EAAAI,GAAAJ,EAAA,SAAAA,EAAAG,OAAA,SAKD,IALC,wBAAAH,EAAAF,SAAA,yBASRrC,MAAQ,SAAMH,EAAa2B,EAAgBzB,EAAoBG,GAAvD,IAAAK,EAAAC,EAAAC,EAAA,OAAAE,GAAAC,EAAAC,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EAAAL,GAAAC,EAAAK,MACMvF,EAAKwF,MAAM,eADjB,cACRX,EADQqC,EAAAzB,KAAAyB,EAAA5B,KAAA,EAAAL,GAAAC,EAAAK,MAESvF,EAAKwF,MAAM,cAFpB,cAERV,EAFQoC,EAAAzB,KAAAyB,EAAA5B,KAAA,EAAAL,GAAAC,EAAAK,MAGOvF,EAAKwF,MAAM,YAHlB,OAGRT,EAHQmC,EAAAzB,KAIZnB,MAAMtE,EAAKmE,IAAMA,EACb,CACI2B,OAAQA,EACRC,QAAS,CACLC,OAAU,mBACVmB,eAAgB,mBAChBlB,iBAAmBzD,EAAKqC,GAAS,UAAYA,EAAQ,GACrDqB,YAAc1D,EAAKsC,GAAY,GAAKA,EAAW,GAC/CqB,UAAY3D,EAAKuC,GAAU,GAAKA,EAAS,IAE7CqB,KAAM1D,EAAW8B,GAAQ3B,EAAS2B,GAAQ,OAC3C6B,KAAK,SAAAC,GACJ,OAAOA,EAASC,SACjBF,KAAK,SAACC,GACF5D,EAAW4D,GACP5D,EAAW4D,EAAS9B,MACnBxE,EAAKqE,SAASA,EAAUiC,EAAU,sDAElCtG,EAAKqE,SAASA,EAAU,KAAMiC,EAASE,SAY3CxG,EAAKqE,SAASA,EAAU,KAAM,wDAEnCoC,MAAM,SAAC9C,GACNP,QAAQC,IAAI,MAAOM,GACnB3D,EAAKqE,SAASA,EAAU,KAAMV,EAAM+C,cAtChC,yBAAAQ,EAAAP,gBA0CRtC,SAAW,SAACA,EAAoBG,EAAWgC,GAE5C9D,EAAW2B,IAAgC,mBAAZA,GAC9BA,EAASG,EAAMgC,KCtKdY,GAAQ,SAACC,EAAiBzF,EAAkByC,IACrD,IAAIH,IAAMK,KAAK+C,aAA4B,SAACC,EAAaf,GACvD,GAAG9D,EAAW6E,IAAW7E,EAAW6E,EAAO/C,OAAShC,EAAK+E,EAAO/C,KAAKK,QAAUnC,EAAW6E,EAAO/C,KAAKgD,MACtG,CACE,IACEV,eAAeW,QAAQ,aAAcF,EAAO/C,KAAKK,OACjDiC,eAAeW,QAAQ,OAAQF,EAAO/C,KAAKgD,MAC3CV,eAAeW,QAAQ,UAAWF,EAAO/C,KAAKgD,KAAKE,KACnDZ,eAAeW,QAAQ,YAAaF,EAAO/C,KAAKgD,KAAK3B,MACrDiB,eAAeW,QAAQ,sBAAuBF,EAAO/C,KAAKgD,KAAKG,sBAC/Db,eAAeW,QAAQ,uBAAwBF,EAAO/C,KAAKgD,KAAKI,uBAChE,MAAOjE,IAETU,GAAS,EAAM,SAEfA,GAAS,EAAOmC,IAEjB,CACDa,QAASA,EACTzF,SAAUA,KAIHiG,GAAW,SAAChC,EAAciC,EAAqBT,EAAiBzF,EAAkByC,IAC7F,IAAIH,IAAMK,KAAK+C,QAAkB,SAACC,EAAaf,GAC1C9D,EAAW6E,IAAW/E,EAAK+E,EAAO/C,MAEnCH,GAAS,EAAM,IAEfA,GAAS,EAAOmC,IAEjB,CACDX,KAAMA,EACNiC,YAAaA,EACbT,QAASA,EACTzF,SAAUA,KAIDmG,GAAoB,SAAChD,EAAgBiD,EAAyBL,EAA8BM,EAA0BL,EAA+BM,EAA0B7D,IAC1L,IAAIH,IAAMS,IAAI2C,gBAA2BvC,EAAQ,SAACwC,EAAaf,GAC1D9D,EAAW6E,IAAW/E,EAAK+E,EAAO/C,MAEnCH,GAAS,EAAM,IAEfA,GAAS,EAAOmC,IAEjB,CACDwB,gBAAiBA,EACjBL,qBAAsBA,EACtBM,iBAAkBA,EAClBL,sBAAuBA,EACvBM,iBAAkBA,KAITC,GAAW,SAACC,EAAwBC,EAAsBC,EAAsBC,EAAsBlE,IACjH,IAAIH,IAAMK,KAAK,eAAgB,SAACgD,EAAaf,GACxC9D,EAAW6E,IAAW/E,EAAK+E,EAAO/C,MAEnCH,GAAS,EAAM,IAEfA,GAAS,EAAOmC,IAEjB,CACD4B,eAAgBA,EAChBC,aAAcA,EACdC,aAAcA,EACdC,aAAcA,KAqCL/G,GAAS,SAAC6C,GACnByC,eAAe0B,WAAW,cAC1B1B,eAAe0B,WAAW,QAC1B1B,eAAe0B,WAAW,WAC1B1B,eAAe0B,WAAW,uBAC1B1B,eAAe0B,WAAW,wBAC1BnE,GAAS,IC3FQoE,eACjB,SAAAA,EAAYnI,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAAwI,IACpBzI,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAA8H,GAAAI,KAAA5I,KAAMK,KAmBVwI,QAAU,WACHtG,EAAKxC,EAAK+I,MAAM1B,UAAY7E,EAAKxC,EAAK+I,MAAMnH,WAC3C5B,EAAKgJ,SAAS,CACVxC,QAAS,GACTyC,WAAW,IAEf7B,GAAMpH,EAAK+I,MAAM1B,QAASrH,EAAK+I,MAAMnH,SAAU,SAAC2F,EAAiBf,IAC/C,IAAXe,GACCvH,EAAKgJ,SAAS,CACVC,WAAW,EACXzC,QAAS,KAEb0C,SAASC,SAASC,QAAO,IAEzBpJ,EAAKgJ,SAAS,CACVxC,QAASA,EACTyC,WAAW,OAKvB3F,EAAMM,KAAK,6CAzCK5D,EA6CxBqJ,gBAAkB,WACdrJ,EAAKgJ,SAAS,CACVM,UAAU,EACVC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,UAAW,GACXlD,QAAS,MApDOxG,EAwDxB2J,WAAa,WACNnH,EAAKxC,EAAK+I,MAAMQ,QAAU/G,EAAKxC,EAAK+I,MAAMS,eAAiBhH,EAAKxC,EAAK+I,MAAMU,WAAajH,EAAKxC,EAAK+I,MAAMW,YACvG1J,EAAKgJ,SAAS,CACVxC,QAAS,GACTyC,WAAW,IAEfpB,GAAS7H,EAAK+I,MAAMQ,MAAOvJ,EAAK+I,MAAMS,aAAcxJ,EAAK+I,MAAMU,SAASG,cAAe5J,EAAK+I,MAAMW,UAAW,SAACnC,EAAiBf,IAC7G,IAAXe,GACCjE,EAAMC,QAAQ,sEACdvD,EAAKgJ,SAAS,CACVC,WAAW,EACXzC,QAAS,GACT8C,UAAU,EACV1H,SAAU,GACV2H,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,UAAW,MAGf1J,EAAKgJ,SAAS,CACVxC,QAASA,EACTyC,WAAW,OAKvB3F,EAAMM,KAAK,sCAjFf5D,EAAK+I,MAAQ,CACT1B,QAAS,GACTzF,SAAU,GACV4E,QAAS,GACTyC,WAAW,EACXK,UAAU,EACVC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,UAAW,IAEf1J,EAAK8I,QAAU9I,EAAK8I,QAAQe,KAAblJ,OAAAmJ,EAAA,EAAAnJ,CAAAX,IACfA,EAAKqJ,gBAAkBrJ,EAAKqJ,gBAAgBQ,KAArBlJ,OAAAmJ,EAAA,EAAAnJ,CAAAX,IACvBA,EAAK2J,WAAa3J,EAAK2J,WAAWE,KAAhBlJ,OAAAmJ,EAAA,EAAAnJ,CAAAX,IAfEA,wHAuFjB,IAAA+J,EAAA9J,KACP,OACQC,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,YAAYM,MAAO,CAACO,gBAAiBnB,EAAekK,SAAU,UAC1E9J,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,MAAMM,MAAO,CAACuJ,cAAe,MAAOC,WAAY,SAAUC,eAAe,SAAUC,aAAc,GAAI9H,UAAW,IAC5HpC,EAAA,cAACzB,EAAD,CAAOyD,IAAKb,EAAOC,KAAMZ,MAAO,CAACyB,MAAO,IAAKC,OAAQ,QAEvDnC,KAAK8I,MAAMO,SAwBbpJ,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,MAAMM,MAAO,CAAC2J,KAAM,EAAGH,WAAY,SAAUC,eAAe,WACxEjK,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOG,GAAOyJ,KACnCpK,EAAA,cAACrB,EAAD,CAAWsB,KAAK,OAAOC,UAAU,eAAemK,YAAY,OAAO7J,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiC3J,GAAO4J,SAAUpK,MAAOJ,KAAK8I,MAAMQ,MAAOmB,SAAU,SAACC,GAAD,OAAgBZ,EAAKf,SAAS,CAACO,MAAOoB,EAAMC,OAAOvK,YAEpNH,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOG,GAAOyJ,KACnCpK,EAAA,cAACrB,EAAD,CAAWsB,KAAK,OAAOC,UAAU,eAAemK,YAAY,cAAc7J,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiC3J,GAAO4J,SAAUpK,MAAOJ,KAAK8I,MAAMS,aAAckB,SAAU,SAACC,GAAD,OAAgBZ,EAAKf,SAAS,CAACQ,aAAcmB,EAAMC,OAAOvK,YAEzOH,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOG,GAAOyJ,KACnCpK,EAAA,cAACrB,EAAD,CAAWsB,KAAK,OAAOC,UAAU,eAAemK,YAAY,WAAW7J,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiC3J,GAAO4J,SAAUpK,MAAOJ,KAAK8I,MAAMU,SAAUiB,SAAU,SAACC,GAAD,OAAgBZ,EAAKf,SAAS,CAACS,SAAUkB,EAAMC,OAAOvK,YAE9NH,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOG,GAAOyJ,KACnCpK,EAAA,cAACrB,EAAD,CAAWsB,KAAK,WAAWC,UAAU,eAAemK,YAAY,WAAW7J,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiC3J,GAAO4J,SAAUpK,MAAOJ,KAAK8I,MAAMW,UAAWgB,SAAU,SAACC,GAAD,OAAgBZ,EAAKf,SAAS,CAACU,UAAWiB,EAAMC,OAAOvK,YAEpOH,EAAA,cAAC2K,EAAD,CACAtK,OAAgC,IAAzBN,KAAK8I,MAAME,UAAsB,SAAW,aACnDxI,QAASR,KAAK0J,aAEdzJ,EAAA,cAACb,EAAD,CAAMe,UAAU,gBAAgBM,MAAO,CAAC4B,UAAW,EAAGnB,MAAQlB,KAAK8I,MAAME,UAAYnJ,EAAoBA,IAAgBG,KAAK8I,MAAMvC,SAEpItG,EAAA,cAAC7B,EAAD,CAAMqC,MAAO,CAAC4B,UAAW,KACrBpC,EAAA,cAACb,EAAD,CAAMe,UAAU,UAAUI,QAAS,WAC/BuJ,EAAKf,SAAS,CACVM,UAAU,EACVC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,UAAW,GACXlD,QAAS,MAEb9F,MAAO,CAAC0J,aAAc,EAAGU,UAAW,SAAU3J,MAAOrB,IATzD,uBA3CRI,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,MAAMM,MAAO,CAAC2J,KAAM,EAAGH,WAAY,SAAUC,eAAe,WACxEjK,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOG,GAAOyJ,KACnCpK,EAAA,cAACzB,EAAD,CAAO2B,UAAU,WAAW8B,IAAKb,EAAOM,SAAUjB,MAAOG,GAAOkK,UAChE7K,EAAA,cAACrB,EAAD,CAAWsB,KAAK,OAAOC,UAAU,eAAemK,YAAY,WAAW7J,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiC3J,GAAOmK,KAAM3K,MAAOJ,KAAK8I,MAAM1B,QAASqD,SAAU,SAACC,GAAD,OAAgBZ,EAAKf,SAAS,CAAC3B,QAASsD,EAAMC,OAAOvK,YAExNH,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAME,GAAOyJ,IAAb,CAAkBF,aAAc,MAC1DlK,EAAA,cAACzB,EAAD,CAAO2B,UAAU,WAAW8B,IAAKb,EAAOO,SAAUlB,MAAOG,GAAOkK,UAChE7K,EAAA,cAACrB,EAAD,CAAWsB,KAAK,WAAYC,UAAU,eAAemK,YAAY,WAAWlK,MAAOJ,KAAK8I,MAAMnH,SAAUlB,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiC3J,GAAOmK,KAAMN,SAAU,SAACC,GAAD,OAAgBZ,EAAKf,SAAS,CAACpH,SAAU+I,EAAMC,OAAOvK,YAE/NH,EAAA,cAAC2K,EAAD,CACAtK,OAAgC,IAAzBN,KAAK8I,MAAME,UAAsB,QAAU,aAClDxI,QAASR,KAAK6I,UAEd5I,EAAA,cAACb,EAAD,CAAMe,UAAU,gBAAgBM,MAAO,CAAC4B,UAAW,EAAGnB,MAAQlB,KAAK8I,MAAME,UAAYnJ,EAAoBA,IAAgBG,KAAK8I,MAAMvC,SAEpItG,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,gBAAgBM,MAAO,CAAC4B,UAAW,GAAI4H,WAAY,SAAUC,eAAe,WACxFjK,EAAA,cAACb,EAAD,CAAMe,UAAU,SAASM,MAAO,CAAC0J,aAAc,EAAGU,UAAW,WAA7D,yBACA5K,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,MAAMM,MAAO,CAACuK,MAAO,OAAQf,WAAY,SAAUC,eAAe,SAAUe,YAAa,EAAGhK,YAAa,UAAWiK,YAAa,QAASC,aAAc,KACpKlL,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAACoK,UAAW,SAAUO,OAAQ,MAAOjK,OAAQ,WAAYZ,QAASP,KAAKoJ,iBAApF,oBAsCZnJ,EAAA,cAACoL,EAAD,CAASrJ,QAAShC,KAAK8I,MAAME,UAAW1G,KAAM,aAvJ3BxB,aA6J7BF,GAAS,CACXyJ,IAAK,CAIDF,aAAc,IAElBW,QAAS,CACLQ,WAAY,EAEZnJ,OAAQ,GACRD,MAAO,GACPqJ,WAAa,UACbtB,WAAY,SACZuB,IAAK,IAGTT,IAAK,CACDX,KAAM,EACNqB,YAAa,IAEjBjB,QAAS,CACLJ,KAAM,EACNqB,YAAa,uBC9LAC,eACnB,SAAAA,EAAYrL,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAA0L,IACtB3L,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAAgL,GAAA9C,KAAA5I,KAAMK,KAQRkB,OAAS,WACPoK,wBAAa,CACXrL,MAAO,oBACPiG,QAAS,mCACTqF,QAAS,CACP,CACEvM,MAAO,MACPkB,QAAS,WACPgB,GAAO,SAAC+F,IACQ,IAAXA,GACDjE,EAAMC,QAAQ,mBACd2F,SAASC,SAASC,QAAO,IAEzB9F,EAAMI,KAAK,yBAKnB,CACEpE,MAAO,KACPkB,QAAS,kBA3BfR,EAAK+I,MAAQ,GAEb/I,EAAKwB,OAASxB,EAAKwB,OAAOqI,KAAZlJ,OAAAmJ,EAAA,EAAAnJ,CAAAX,IAJQA,wHAoCtB,IAAI8L,EAAWhF,eAAeC,QAAQ,aACtC,OACE7G,EAAA,wBAAQE,UAAU,SAASM,MAAOG,GAAOkL,UACvC7L,EAAA,cAAC8L,EAAA,EAAD,CAAM5L,UAAU,KAAK6L,GAAG,IACtB/L,EAAA,cAACzB,EAAD,CAAOyD,IAAKb,EAAOC,KAAMlB,UAAU,GAAGM,MAAO,CAAEyB,MAAO,GAAIC,OAAQ,OAElElC,EAAA,cAACb,EAAD,CAAMe,UAAU,KAAKM,MAAO,CAAC6K,WAAY,SAAzC,iCACArL,EAAA,cAACb,EAAD,CAAMqB,MAAOG,GAAOqL,WAAY,MAAQJ,EAAW,eACnD5L,EAAA,sBAAME,UAAU,aAAaI,QAASP,KAAKuB,OAAQd,MAAO,CAAC2J,KAAM,IAC/DnK,EAAA,cAACzB,EAAD,CAAOyD,IAAKb,EAAOG,OAAQd,MAAO,CAAEyB,MAAO,GAAIC,OAAQ,eA9C7BrB,aAqDhCF,GAAS,CACbkL,SAAU,CACR9K,gBAAiBnB,EACjBqB,MAAOrB,EACPqC,MAAO,OACPgK,QAAS,GAEXD,UAAW,CACT7B,KAAM,GACN+B,SAAU,KCpEOC,oOAIjB,OACEnM,EAAA,wBAAQQ,MAAOG,GAAOyL,QACpBpM,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,UAAhB,8CAN4BW,aAY9BF,GAAS,CACbyL,OAAQ,CACNjC,KAAM,EAENkC,eAAgBzM,EAChB0M,eAAgB,EAChBC,mBAAoB,QAGpBtK,MAAO,OAGPG,UAAW,GACXoK,WAAY,GACZC,cAAe,IAEjBC,IAAK,CACHvC,KAAM,EACNqC,WAAY,GACZC,cAAe,GACfzC,WAAY,UAEd2C,SAAU,CACR1K,MAAO,GACPC,OAAQ,IAEV0K,UAAW,CACT7L,gBAAiBnB,IC/CRe,GAAS,CACpBkM,UAAW,CACT1C,KAAM,EAENlI,MAAO,OAEPgK,QAAS,GACT/B,aAAc,GACd4C,kBAAmBlN,EACnBmN,kBAAmB,EACnBC,sBAAuB,SAEzB5C,IAAK,CACHD,KAAM,GAGR8C,KAAM,CACJ9C,KAAM,EAENF,eAAgB,SAChBD,WAAY,SAEZkB,aAAc,GACde,QAAS,EACTd,OAAQ,GAEV+B,MAAO,CAOL/B,OAAQ,EACRc,QAAS,YAGXnB,IAAI,CACFX,KAAM,EAGNqC,WAAY,EACZC,cAAe,EACfP,SAAU,IAEZzN,IAAI,CACFwD,MAAO,GACPC,OAAQ,GACRiJ,OAAQ,ICpCSgC,eACnB,SAAAA,EAAY/M,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAAoN,IACtBrN,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAA0M,GAAAxE,KAAA5I,KAAMK,KACDyI,MAAQ,GAFS/I,wHAQf,IAAA+J,EAAA9J,KACP,OACEC,EAAA,sBAAMQ,MAAOG,GAAOyM,SAClBpN,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,KAAKM,MAAO6M,GAAWR,WACnC7M,EAAA,cAAC7B,EAAD,CAAMqC,MAAO6M,GAAWjD,KACpBpK,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,aAAaM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM4M,GAAWH,MAAjB,CAAwBtC,UAAW,WAAWtK,QAAS,kBAAMuJ,EAAKzJ,MAAMkN,QAAQC,KAAK,aACrHvN,EAAA,cAACzB,EAAD,CAAOyD,IAAKb,EAAOI,QAASf,MAAO6M,GAAW5O,MAC9CuB,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,UAAUM,MAAO6M,GAAWvC,KAA5C,iBAIF9K,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,aAAaM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM4M,GAAWH,MAAjB,CAAwBtC,UAAW,WAAWtK,QAAS,kBAAMuJ,EAAKzJ,MAAMkN,QAAQC,KAAK,cACrHvN,EAAA,cAACzB,EAAD,CAAOyD,IAAKb,EAAOK,QAAShB,MAAO6M,GAAW5O,MAC9CuB,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,UAAUM,MAAO6M,GAAWvC,KAA5C,kBAIF9K,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,aAAaM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM4M,GAAWH,MAAjB,CAAwBtC,UAAW,WAAWtK,QAAS,kBAAMuJ,EAAKzJ,MAAMkN,QAAQC,KAAK,aACrHvN,EAAA,cAACzB,EAAD,CAAOyD,IAAKb,EAAOQ,QAASnB,MAAO6M,GAAW5O,MAC9CuB,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,UAAUM,MAAO6M,GAAWvC,KAA5C,2BA5BqBjK,aAwCjCF,GAAS,CACbyM,QAAS,CACPjD,KAAM,EAENlI,MAAO,QAETyK,IAAK,CACHvC,KAAM,EACNqC,WAAY,EACZC,cAAe,EACfzC,WAAY,UAEd4C,UAAW,CACTG,kBAAmB,EACnBD,kBAAmBlN,EACnBoN,sBAAuB,QACvB/L,MAAOrB,ICpEEe,GAAS,CAClByM,QAAS,CACPrM,gBAAiBnB,GAEnBwK,IAAK,CAEHJ,WAAY,aAEZ8C,kBAAmBlN,EACnBmN,kBAAmB,EACnBC,sBAAuB,QACvB5K,UAAW,GAMboL,IAAK,CAEHxD,WAAY,aACZ5H,UAAW,EACX8H,aAAc,EACd+B,QAAS,ICtBFtL,GAAS,CAClBkM,UAAW,GAEXY,KAAM,CACJ1D,cAAe,MACf2D,aAAc,aACd3M,gBAAiBnB,EACjB4L,YAAa,GACbmC,aAAc,GACdnB,WAAY,EACZC,cAAe,GAEjBpM,MAAO,CACL8J,KAAM,GACNyD,UAAW,aACX3L,MAAO,OACP4L,cAAe,OACf3B,SAAU,GACVjL,MAAOrB,GAETkO,MAAO,CACL3D,KAAM,EACNyD,UAAW,WACX1D,aAAc,GAEhBE,IAAK,CAEHhI,UAAW,EACX8H,aAAc,EACdsC,WAAY,EACZC,cAAe,GAEjBe,IAAK,CACHrD,KAAM,EACNlI,MAAO,QAET8L,MAAO,CACL/M,YAAapB,EACboL,YAAa,EACbwB,WAAY,EACZC,cAAe,EACfjB,YAAa,EACbmC,aAAc,EACdK,QAAS,UAEXC,UAAW,GAIXC,YAAa,CACXnN,gBAAiBnB,EACjBoB,YAAapB,EACboL,YAAa,EACbwB,WAAY,EACZC,cAAe,EACfjB,YAAa,EACbmC,aAAc,EACdK,QAAS,UAEXG,gBAAiB,CAEflN,MAAOrB,GAETwO,QAAS,CACPhM,UAAW,EACX8H,aAAc,EACdsC,WAAY,EACZC,cAAe,ICzCA4B,eACnB,SAAAA,EAAYjO,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAAsO,IACtBvO,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAA4N,GAAA1F,KAAA5I,KAAMK,KAmCRkO,OAAS,WACJhM,EAAKxC,EAAK+I,MAAMhE,SAAW/E,EAAK+I,MAAMpB,qBAAuB,GAAKnF,EAAKxC,EAAK+I,MAAMf,kBAAoBxF,EAAKxC,EAAK+I,MAAMd,mBAAqBjI,EAAK+I,MAAMnB,sBAAwB,GAAK5H,EAAK+I,MAAMb,iBAAmB,GAChNlI,EAAKgJ,SAAS,CACZC,WAAW,IAEblB,GAAkB/H,EAAK+I,MAAMhE,OAAQ/E,EAAK+I,MAAMf,gBAAiBhI,EAAK+I,MAAMpB,qBAAsB3H,EAAK+I,MAAMd,iBAAkBjI,EAAK+I,MAAMnB,sBAAuB5H,EAAK+I,MAAMb,iBAAkB,SAACX,EAAiBf,GAC9MxG,EAAKgJ,SAAS,CACZC,WAAW,KAEC,IAAX1B,EACDjE,EAAMC,QAAQ,uCAEdD,EAAMI,KAAKlB,EAAKgE,GAAWA,EAAU,sCAI3ClD,EAAMM,KAAK,qDAlDb5D,EAAK+I,MAAQ,CACXE,WAAW,EACXlE,OAAQ,GACRiD,gBAAiB,GACjBL,qBAAsB,EACtBM,iBAAkB,GAClBL,sBAAuB,EACvBM,iBAAkB,GAEpBlI,EAAKwO,OAASxO,EAAKwO,OAAO3E,KAAZlJ,OAAAmJ,EAAA,EAAAnJ,CAAAX,IAXQA,mFAcJ,IRyDGyO,EAAYpK,EQzDf0F,EAAA9J,KACd8E,EAAwB+B,eAAeC,QAAQ,WACnD9G,KAAK+I,SAAS,CACZjE,OAAQA,GAAkB,KAE5B9E,KAAK+I,SAAS,CACZC,WAAW,IRmDQwF,EQjDZ1J,GAAkB,GRiDMV,EQjDF,SAACkD,EAAqBf,GACrC,OAAXe,GACDwC,EAAKf,SAAS,CACZC,WAAW,EACXjB,gBAAiBT,EAAOS,gBACxBL,qBAAsBJ,EAAOI,qBAC7BM,iBAAkBV,EAAOS,gBACzBJ,sBAAuBL,EAAOK,sBAC9BM,iBAAkBX,EAAOW,qBR0CjC,IAAIhE,IAAME,IAAIkD,QAAmBmH,EAAI,SAAClH,EAAaf,GAC9C9D,EAAW6E,IAAW7E,EAAW6E,EAAO/C,MAEzCH,EAASkD,EAAO/C,KAAe,IAE/BH,EAAS,KAAMmC,sCQrBV,IAAAkI,EAAAzO,KACP,OACEC,EAAA,sBAAMQ,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAME,GAAOyM,QAAb,CAAsBjD,KAAM,EAAGpJ,gBAAiBnB,KACzDI,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAY5B,WACzB7M,EAAA,cAAC7B,EAAD,CAAMqC,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAMgO,GAAYrE,IAAlB,CAAuBF,aAAc,GAAIwE,aAAc,aAAe9O,KAC/EI,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,GAAG7L,UAAU,eAAtB,QAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,UAAU7L,UAAU,eAA7B,gBAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,WAAW7L,UAAU,eAA9B,iBAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,UAAU7L,UAAU,eAA7B,iBAIAF,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAACb,EAAD,0BACAa,EAAA,cAACrB,EAAD,CAAWsB,KAAK,OAAOoK,YAAY,oBAAoBnK,UAAU,eAAeM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiCmE,GAAYjB,KAAMrN,MAAOJ,KAAK8I,MAAMf,gBAAiB0C,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAAChB,gBAAiB2C,EAAMC,OAAOvK,YAEpPH,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAACb,EAAD,+BACAa,EAAA,cAACrB,EAAD,CAAWsB,KAAK,SAASoK,YAAY,yBAAyBnK,UAAU,eAAeM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiCmE,GAAYjB,KAAMrN,MAAOJ,KAAK8I,MAAMpB,qBAAuB,EAAI1H,KAAK8I,MAAMpB,qBAAuB,GAAI+C,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAACrB,sBAAwBgD,EAAMC,OAAOvK,MAAMwO,QAAQ,UAAW,UAE3U3O,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAACb,EAAD,2BACAa,EAAA,cAACrB,EAAD,CAAWsB,KAAK,OAAOoK,YAAY,qBAAqBnK,UAAU,eAAeM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiCmE,GAAYjB,KAAMrN,MAAOJ,KAAK8I,MAAMd,iBAAkByC,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAACf,iBAAkB0C,EAAMC,OAAOvK,YAEvPH,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAACb,EAAD,gCACAa,EAAA,cAACrB,EAAD,CAAWsB,KAAK,SAASoK,YAAY,0BAA0BnK,UAAU,eAAeM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiCmE,GAAYjB,KAAMrN,MAAOJ,KAAK8I,MAAMnB,sBAAwB,EAAI3H,KAAK8I,MAAMnB,sBAAwB,GAAI8C,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAACpB,uBAAyB+C,EAAMC,OAAOvK,MAAMwO,QAAQ,UAAW,UAE/U3O,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAACb,EAAD,2BACAa,EAAA,cAACrB,EAAD,CAAWsB,KAAK,SAASoK,YAAY,qBAAqBnK,UAAU,eAAeM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiCmE,GAAYjB,KAAMrN,MAAOJ,KAAK8I,MAAMb,iBAAmB,EAAIjI,KAAK8I,MAAMb,iBAAmB,GAAIwC,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAACd,kBAAoByC,EAAMC,OAAOvK,MAAMwO,QAAQ,UAAW,UAE3T3O,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOiO,GAAYL,SAC1CpO,EAAA,cAAC2K,EAAD,CACAtK,MAAM,SACNE,QAASR,KAAKuO,WAIlBtO,EAAA,cAACoL,EAAD,CAASrJ,QAAShC,KAAK8I,MAAME,oBAtGAlI,aCdhB+N,oLAQjB,OACE5O,EAAA,sBAAMQ,MAAOG,GAAOkM,WAClB7M,EAAA,uBAAOC,KAAK,QAAQyG,IAAK3G,KAAKK,MAAMsG,IAAKmI,QAAS9O,KAAKK,MAAM0O,SAAUxO,QAASP,KAAKK,MAAMG,UAEzF+B,EAAKvC,KAAKK,MAAMiC,OAChBrC,EAAA,uBAAOQ,MAAOG,GAAO0B,MAAOtC,KAAKK,MAAMiC,cAbRxB,aAApB+N,GACZ9N,aAAuB,CAC5BgO,UAAU,EACVzM,KAAM,GACNqE,IAAK,GACLnG,QAAS,cAeb,IAAMI,GAAS,CACbkM,UAAW,CAETkC,YAAa,IAEfC,OAAQ,CACN9M,OAAQ,GACRD,MAAO,GACPiJ,aAAc,GACdF,YAAa,EACbhK,YAAapB,EACboK,WAAY,SACZC,eAAgB,UAElBgF,IAAK,CACH/M,OAAQ,GACRD,MAAO,GACPiJ,aAAc,EACdnK,gBAAiBnB,GAEnByC,KAAM,CACJgJ,WAAY,IC3BK6D,eACnB,SAAAA,EAAY9O,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAAmP,IACtBpP,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAAyO,GAAAvG,KAAA5I,KAAMK,KA4BRkO,OAAS,WACP,GAAGhM,EAAKxC,EAAK+I,MAAMV,eAAiBrI,EAAK+I,MAAMX,eAAiB,GAAK5F,EAAKxC,EAAK+I,MAAMT,eAAiB9F,EAAKxC,EAAK+I,MAAMR,eAAiBvI,EAAK+I,MAAMT,eAAiBtI,EAAK+I,MAAMR,aAAa,CACzL,IAAI8G,GAAsB,EAC1B,GAA8B,WAA3BrP,EAAK+I,MAAMV,aAA0B,CACtC,IAAIiH,EAAgCxI,eAAeC,QAAQ,uBAC3DsI,KAAcC,GAAkBC,SAASD,IAAmBtP,EAAK+I,MAAMX,oBACpE,CACH,IAAIoH,EAAiC1I,eAAeC,QAAQ,wBAC5DsI,KAAcG,GAAmBD,SAASC,IAAoBxP,EAAK+I,MAAMX,gBAExEiH,GACDrP,EAAKgJ,SAAS,CACZC,WAAW,IAEbd,GAASnI,EAAK+I,MAAMX,eAAgBpI,EAAK+I,MAAMV,aAAcrI,EAAK+I,MAAMT,aAActI,EAAK+I,MAAMR,aAAc,SAAChB,EAAiBf,GAC/HxG,EAAKgJ,SAAS,CACZC,WAAW,KAEC,IAAX1B,GACDvH,EAAKgJ,SAAS,CACZZ,eAAgB,EAChBC,aAAc,UACdC,aAAc,GACdC,aAAc,KAGhBjF,EAAMC,QAAQ,wCAEdD,EAAMI,KAAKlB,EAAKgE,GAAWA,EAAU,sCAIvClD,EAAMM,KAAK,gCAAkC5D,EAAK+I,MAAMV,aAAe,+DAG3E/E,EAAMM,KAAK,qDA9Db5D,EAAK+I,MAAQ,CACX0G,MAAO,GACPxG,WAAW,EACXb,eAAgB,EAChBC,aAAc,UACdC,aAAc,GACdC,aAAc,IAEhBvI,EAAKwO,OAASxO,EAAKwO,OAAO3E,KAAZlJ,OAAAmJ,EAAA,EAAAnJ,CAAAX,IAVQA,mFAaJ,IV+CIqE,EU/CJ0F,EAAA9J,KACd8E,EAAwB+B,eAAeC,QAAQ,WACnD9G,KAAK+I,SAAS,CACZV,aAAcvD,GAAkB,KAElC9E,KAAK+I,SAAS,CACZC,WAAW,IVyCS5E,EUvCZ,SAACkD,EAAsBf,GAC/BuD,EAAKf,SAAS,CACZC,WAAW,EACXwG,MAAOlI,MVqCb,IAAIrD,IAAME,IAAIkD,SAAmB,SAACC,EAAaf,GAC1C9D,EAAW6E,IAAW/E,EAAK+E,EAAO/C,MAEnCH,EAASkD,EAAO/C,KAAsB,IAEtCH,EAAS,GAAImC,sCUER,IAAAkI,EAAAzO,KACP,OACEC,EAAA,sBAAMQ,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAME,GAAOyM,QAAb,CAAsBjD,KAAM,EAAGpJ,gBAAiBnB,KACzDI,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAY5B,WACzB7M,EAAA,cAAC7B,EAAD,CAAMqC,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAMgO,GAAYrE,IAAlB,CAAuBF,aAAc,GAAIwE,aAAc,aAAe9O,KAC/EI,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,GAAG7L,UAAU,eAAtB,QAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,UAAU7L,UAAU,eAA7B,gBAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,WAAW7L,UAAU,eAA9B,iBAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,UAAU7L,UAAU,eAA7B,iBAIAF,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACzBpK,EAAA,cAAClB,EAAD,CACEoB,UAAU,eACVC,MAAOJ,KAAK8I,MAAMR,aAClB7H,MAAOiO,GAAYjB,IACnBhD,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAAET,aAAcoC,EAAMC,OAAOvK,UACnEH,EAAA,wBAAQ0G,IAAK,SAAUvG,MAAM,IAA7B,+BACCJ,KAAK8I,MAAM0G,OACVxP,KAAK8I,MAAM0G,MAAMC,OAAO,SAAAC,GAAC,OAAIA,EAAEjI,MAAQgH,EAAK3F,MAAMT,eAAcsH,IAAI,SAACD,EAAUE,GAC7E,OAAO3P,EAAA,wBAAQ0G,IAAK,QAAUiJ,EAAGxP,MAAOsP,EAAEjI,KAAMiI,EAAE9J,UAK1D3F,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAAC4P,GAAD,CAAad,SAAsC,YAA5B/O,KAAK8I,MAAMV,aAA4B9F,KAAK,UAAU9B,QAAS,kBAAMiO,EAAK1F,SAAS,CAACX,aAAc,eACzHnI,EAAA,cAAC4P,GAAD,CAAad,SAAsC,aAA5B/O,KAAK8I,MAAMV,aAA6B9F,KAAK,WAAW9B,QAAS,kBAAMiO,EAAK1F,SAAS,CAACX,aAAc,iBAE7HnI,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAYrE,KACvBpK,EAAA,cAACrB,EAAD,CAAWsB,KAAK,SAASoK,YAAY,kBAAkBnK,UAAU,eAAeM,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAM6J,EAAN,GAAiCmE,GAAYjB,KAAMrN,MAAOJ,KAAK8I,MAAMX,eAAiB,EAAInI,KAAK8I,MAAMX,eAAiB,GAAKsC,SAAU,SAACC,GAAD,OAAgB+D,EAAK1F,SAAS,CAACZ,gBAAkBuC,EAAMC,OAAOvK,MAAMwO,QAAQ,UAAW,UAEnT3O,EAAA,cAAC7B,EAAD,CAAM+B,UAAU,SAASM,MAAOiO,GAAYL,SAC1CpO,EAAA,cAAC2K,EAAD,CACAtK,MAAM,SACNE,QAASR,KAAKuO,WAIlBtO,EAAA,cAACoL,EAAD,CAASrJ,QAAShC,KAAK8I,MAAME,oBAnHClI,iCCL/B,SAASgP,GAAiBtN,EAAauN,GAC5C,IACE,OArBG,SAAsBvN,EAAauN,GACxC,IACE,OAAGtN,EAAWD,IACS,iBAAVA,GACTA,EAAOiE,WAEJlE,EAAKwN,KACTA,EAAUrQ,GAEJsQ,KAAOxN,GAAQyN,OAAOF,IAEtB,GAET,MAAOhN,GAEP,OADAC,EAAQD,EAAI,wBACL,IAMAmN,CAAa1N,EAAQ7C,GAC5B,MAAOoD,GAEP,OADAC,EAAQD,EAAI,4BACL,QCNUoN,eACnB,SAAAA,EAAY9P,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAAmQ,IACtBpQ,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAAyP,GAAAvH,KAAA5I,KAAMK,KACDyI,MAAQ,CACXvE,KAAM,GACNO,OAAQ,GACRkE,WAAW,GALSjJ,mFASJ,IAAA+J,EAAA9J,KACd8E,EAAwB+B,eAAeC,QAAQ,WACnD9G,KAAK+I,SAAS,CACZjE,OAAQA,GAAkB,KAE5B9E,KAAK+I,SAAS,CACZC,WAAW,IZwCY,SAAClE,EAAgBV,IAC5C,IAAIH,IAAME,IAAI,gBAAkBW,EAAQ,SAACwC,EAAaf,GACjD9D,EAAW6E,IAAW/E,EAAK+E,EAAO/C,MAEnCH,EAASkD,EAAO/C,KAAoB,IAEpCH,EAAS,GAAImC,KY5Cf6J,CAActL,GAAkB,GAAI,SAACwC,EAAoBf,GACvDuD,EAAKf,SAAS,CACZC,WAAW,EACXzE,KAAM+C,EAAOmI,OAAO,SAAAC,GAAC,OAAIA,EAAErH,eAAiByB,EAAKhB,MAAMhE,QAAU4K,EAAEpH,eAAiBwB,EAAKhB,MAAMhE,8CAK5F,IAAA2J,EAAAzO,KACP,OACEC,EAAA,sBAAMQ,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAME,GAAOyM,QAAb,CAAsBjD,KAAM,EAAGpJ,gBAAiBnB,KACzDI,EAAA,cAAC7B,EAAD,CAAMqC,MAAOiO,GAAY5B,WACzB7M,EAAA,cAAC7B,EAAD,CAAMqC,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAMgO,GAAYrE,IAAlB,CAAuBF,aAAc,GAAIwE,aAAc,aAAe9O,KAC/EI,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,GAAG7L,UAAU,eAAtB,QAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,UAAU7L,UAAU,eAA7B,gBAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,WAAW7L,UAAU,eAA9B,iBAGAF,EAAA,cAAC8L,EAAA,EAAD,CAAMC,GAAG,UAAU7L,UAAU,eAA7B,iBAKAoC,EAAKvC,KAAK8I,MAAMvE,MAChBvE,KAAK8I,MAAMvE,KAAKoL,IAAI,SAACD,EAAQE,GAC3B,OACE3P,EAAA,cAAC7B,EAAD,CAAMuI,IAAKiJ,EAAGnP,MAAO,CAAC2J,KAAM,EAAG4C,kBAAmB,EAAGD,kBAAmBlN,EAAgBwQ,kBAAmB,QAAS3D,cAAe,IAChIzM,EAAA,cAAC7B,EAAD,KACE6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,OAAQlB,MAAOuN,EAAK3F,MAAMhE,SAAW4K,EAAErH,aAAexI,EAAcA,IAAiB4O,EAAK3F,MAAMhE,SAAW4K,EAAErH,aAAe,OAAS,aAE3KpI,EAAA,cAAC7B,EAAD,gBACU6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,SAAUsN,EAAEvH,iBAEzDlI,EAAA,cAAC7B,EAAD,uBACiB6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,SAAUsN,EAAEtH,eAE/DqG,EAAK3F,MAAMhE,SAAW4K,EAAErH,cACzBpI,EAAA,cAAC7B,EAAD,YACM6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,SAAUsN,EAAEpH,eAGpDmG,EAAK3F,MAAMhE,SAAW4K,EAAEpH,cACzBrI,EAAA,cAAC7B,EAAD,cACQ6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,SAAUsN,EAAErH,eAGvDpI,EAAA,cAAC7B,EAAD,YACM6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,SAAU0N,GAAiBJ,EAAEY,aAErEZ,EAAE5G,OACH7I,EAAA,cAAC7B,EAAD,gBACU6B,EAAA,cAACb,EAAD,CAAMqB,MAAO,CAAC2J,KAAM,EAAGhI,WAAY,SAAUsN,EAAE5G,WAO/D7I,EAAA,cAACb,EAAD,kCAGFa,EAAA,cAACoL,EAAD,CAASrJ,QAAShC,KAAK8I,MAAME,oBAnFAlI,aCZhB0H,eACjB,SAAAA,EAAYnI,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAAwI,IACpBzI,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAA8H,GAAAI,KAAA5I,KAAMK,KACDyI,MAAQ,GAFO/I,wHASxB,OACQE,EAAA,cAAC7B,EAAD,CAAMqC,MAAO,CAAC2J,KAAM,EAAGpJ,gBAAiBnB,EAAeqM,QAAS,KAC5DjM,EAAA,cAACb,EAAD,kCAZmB0B,aCSd0H,oLAGjB,OACEvI,EAAA,cAAC7B,EAAD,CAAMqC,MAAOG,GAAOkM,WAClB7M,EAAA,cAACsQ,GAAD,CAAUhD,QAASvN,KAAKK,MAAMkN,UAC5BtN,EAAA,cAACuQ,GAAA,EAAD,KACEvQ,EAAA,cAACuQ,GAAA,EAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,UAAWvD,KACnCnN,EAAA,cAACuQ,GAAA,EAAD,CAAOC,KAAM,WAAYC,OAAK,EAACC,UAAWrC,KAC1CrO,EAAA,cAACuQ,GAAA,EAAD,CAAOC,KAAM,YAAaC,OAAK,EAACC,UAAWxB,KAC3ClP,EAAA,cAACuQ,GAAA,EAAD,CAAOC,KAAM,WAAYC,OAAK,EAACC,UAAWR,KAC1ClQ,EAAA,cAACuQ,GAAA,EAAD,CAAOG,UAAWC,MAEtB3Q,EAAA,cAAC4Q,GAAD,cAb2B/P,aAmB7BF,GAAS,CACbkM,UAAW,CACT1C,KAAM,EACNpJ,gBAAiBnB,EACjBoK,WAAY,aACZC,eAAgB,eC7BC4G,eACnB,SAAAA,EAAYzQ,GAAY,IAAAN,EAAA,OAAAW,OAAA+H,EAAA,EAAA/H,CAAAV,KAAA8Q,IACtB/Q,EAAAW,OAAAgI,EAAA,EAAAhI,CAAAV,KAAAU,OAAAiI,EAAA,EAAAjI,CAAAoQ,GAAAlI,KAAA5I,KAAMK,KACDyI,MAAQ,CACXiI,YAAY,GAHQhR,mFASnBwC,EADwBsE,eAAeC,QAAQ,gBAEhD9G,KAAK+I,SAAS,CACZgI,YAAY,qFAQhB,OACI/Q,KAAK8I,MAAMiI,WACT9Q,EAAA,cAAC8L,EAAA,EAAD,KACE9L,EAAA,cAAC+Q,GAAD,CAAMzD,QAASvN,KAAKK,MAAMkN,WAG5BtN,EAAA,cAACgR,GAAD,aA1BgCnQ,yCCJrBoQ,oLAEb,OAAOC,EAAAlM,EAAAmM,cAAAD,EAAAlM,EAAAoM,SAAA,KACHF,EAAAlM,EAAAmM,cAACE,GAAD,CAAc/D,QAASA,SACvB4D,EAAAlM,EAAAmM,cAACG,EAAA,gBAAD,CAAiBC,MAAOC,cAAaC,SAAUC,0BAAwBC,oBAJlD9Q,IAAM+Q,WCEnBC,QACW,cAA7BC,OAAO7I,SAAS8I,UAEe,UAA7BD,OAAO7I,SAAS8I,UAEhBD,OAAO7I,SAAS8I,SAASC,MACvB,2DCbNC,IAASC,OAAOhB,EAAAlM,EAAAmM,cAACgB,GAAD,MAASnJ,SAASoJ,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpM,KAAK,SAAAqM,GACjCA,EAAaC","file":"static/js/main.f0cdd222.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","const API_BASE_PATH = 'https://mcurrency.herokuapp.com/';\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\r\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\r\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\r\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly servent = IMAGE_BASE_PATH + 'servent.png';\r\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","import Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'user';\r\n\r\nexport const login = (emailId: string, password: string, callback: (result: boolean, message: string) => void) => {\r\n    new Api().post(controller + '/' + 'login', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNNObject(result.data.user))\r\n      {\r\n        try {\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('user', result.data.user);\r\n          sessionStorage.setItem('user_id', result.data.user._id);\r\n          sessionStorage.setItem('user_name', result.data.user.name);\r\n          sessionStorage.setItem('user_bitcoinbalance', result.data.user.bitcoinWalletBalance);\r\n          sessionStorage.setItem('user_ethereumbalance', result.data.user.ethereumWalletBalance);\r\n        } catch (error) {\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      emailId: emailId,\r\n      password: password\r\n    });\r\n};\r\n\r\nexport const register = (name: string, description: string, emailId: string, password: string, callback: (result: boolean, message: string) => void) => {\r\n  new Api().post(controller + '/', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    description: description,\r\n    emailId: emailId,\r\n    password: password\r\n  });\r\n};\r\n\r\nexport const updateAccountInfo = (userId: string, bitcoinWalletId: string, bitcoinWalletBalance: number, ethereumWalletId: string, ethereumWalletBalance: number, maxAmountAllowed: number, callback: (result: boolean, message: string) => void) => {\r\n  new Api().put(controller + '/account/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    bitcoinWalletId: bitcoinWalletId,\r\n    bitcoinWalletBalance: bitcoinWalletBalance,\r\n    ethereumWalletId: ethereumWalletId,\r\n    ethereumWalletBalance: ethereumWalletBalance,\r\n    maxAmountAllowed: maxAmountAllowed\r\n  });\r\n};\r\n\r\nexport const transfer = (currencyAmount: number, currencyType: string, sourceUserId: string, targetUserId: string, callback: (result: boolean, message: string) => void) => {\r\n  new Api().post('transaction/', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    currencyAmount: currencyAmount,\r\n    currencyType: currencyType,\r\n    sourceUserId: sourceUserId,\r\n    targetUserId: targetUserId\r\n  });\r\n};\r\n\r\nexport const loadTransfers = (userId: string, callback: (result: Array<any>, message: string) => void) => {\r\n  new Api().get('transactions/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data as Array<any>, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadUsers = (callback: (result: Array<IUser>, message: string) => void) => {\r\n  new Api().get(controller + 's/', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data as Array<IUser>, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadUser = (id: string, callback: (result: IUser | null, message: string) => void) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data))\r\n    {\r\n      callback(result.data as IUser, '');\r\n    }else{\r\n      callback(null, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('user_bitcoinbalance');\r\n    sessionStorage.removeItem('user_ethereumbalance');\r\n    callback(true);\r\n};\r\n","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { login, register } from '../../store/actions/user';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n    emailId: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isCreate: boolean,\r\n    uName: string,\r\n\tuDescription: string,\r\n\tuEmailId: string,\r\n\tuPassword: string,\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            emailId: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isCreate: false,\r\n            uName: '',\r\n            uDescription: '',\r\n            uEmailId: '',\r\n            uPassword: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onRegister = this.onRegister.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.emailId) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            login(this.state.emailId, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                    document.location.reload(true);\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Email Id and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isCreate: true,\r\n            uName: '',\r\n            uDescription: '',\r\n            uEmailId: '',\r\n            uPassword: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onRegister = () => {\r\n        if(isNN(this.state.uName) && isNN(this.state.uDescription) && isNN(this.state.uEmailId) && isNN(this.state.uPassword)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            register(this.state.uName, this.state.uDescription, this.state.uEmailId.toLowerCase(), this.state.uPassword, (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Registered successfully now login with your email id and password.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isCreate: false,\r\n                        password: '',\r\n                        uName: '',\r\n                        uDescription: '',\r\n                        uEmailId: '',\r\n                        uPassword: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter all the fields to continue.');\r\n        }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {!this.state.isCreate ?\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Email Id' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12 center' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>REGISTER HERE</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                :\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Name' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uName} onChange={(event: any) => this.setState({uName: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Description' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='text' className='form-control' placeholder='Email Id' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uEmailId} onChange={(event: any) => this.setState({uEmailId: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <TextInput type='password' className='form-control' placeholder='Password' style={{...CommonStyles.textInput, ...styles.txtFull}} value={this.state.uPassword} onChange={(event: any) => this.setState({uPassword: event.target.value})} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Submit\" : \"Loading...\"}\r\n                    onPress={this.onRegister}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isCreate: false,\r\n                                uName: \"\",\r\n                                uDescription: \"\",\r\n                                uEmailId: \"\",\r\n                                uPassword: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 3,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    },\r\n    txtFull: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    }\r\n};","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { Text, Image } from '../common/elements';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport { logout } from '../../store/actions/user';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            logout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n                document.location.reload(true);\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() { \r\n    let userName = sessionStorage.getItem('user_name');\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logo} className='' style={{ width: 22, height: 22}} />\r\n        </Link>\r\n          <Text className='fl' style={{marginLeft: '10px'}}>Transaction Management Portal</Text>\r\n          <Text style={styles.titleText}>{'Hi ' + userName + ' welcome!!!'}</Text>\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    width: '100%',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    fontSize: 15\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Transaction Management Protal</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: 25,\r\n    height: 25,\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { View, TouchableHighlight, Image, Text } from '../common/elements';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { loadUsers } from '../../store/actions/user';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('account')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    Account Info\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('transfer')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    Make Transfer\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('history')}>\r\n                  <Image src={Images.servent} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  View History\r\n                  </View>\r\n                </View>\r\n              </View>\r\n        </View>\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { IUser } from '../../models/user';\r\nimport { loadUser, updateAccountInfo } from '../../store/actions/user';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  userId: string,\r\n  bitcoinWalletId: string,\r\n\tbitcoinWalletBalance: number,\r\n\tethereumWalletId: string,\r\n\tethereumWalletBalance: number,\r\n\tmaxAmountAllowed: number\r\n};\r\n\r\nexport default class Account extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      userId: '',\r\n      bitcoinWalletId: '',\r\n      bitcoinWalletBalance: 0,\r\n      ethereumWalletId: '',\r\n      ethereumWalletBalance: 0,\r\n      maxAmountAllowed: 0\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId: string | null = sessionStorage.getItem('user_id');\r\n    this.setState({\r\n      userId: userId ? userId : ''\r\n    });\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadUser(userId ? userId : '', (result: IUser| null, message: string) => {\r\n      if(result !== null) {\r\n        this.setState({\r\n          isLoading: false,\r\n          bitcoinWalletId: result.bitcoinWalletId,\r\n          bitcoinWalletBalance: result.bitcoinWalletBalance,\r\n          ethereumWalletId: result.bitcoinWalletId,\r\n          ethereumWalletBalance: result.ethereumWalletBalance,\r\n          maxAmountAllowed: result.maxAmountAllowed\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.userId) && this.state.bitcoinWalletBalance > 0 && isNN(this.state.bitcoinWalletId) && isNN(this.state.ethereumWalletId) && this.state.ethereumWalletBalance > 0 && this.state.maxAmountAllowed > 0){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        updateAccountInfo(this.state.userId, this.state.bitcoinWalletId, this.state.bitcoinWalletBalance, this.state.ethereumWalletId, this.state.ethereumWalletBalance, this.state.maxAmountAllowed, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            Toast.success('Transaction initiated successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to initiate transaction.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n        <View style={{...modelStyles.row, marginBottom: 25, borderBottom: '1px solid ' + COLOR.HR_COLOR}}>\r\n          <Link to='' className='pointer m10'>\r\n            Home\r\n          </Link>\r\n          <Link to='account' className='pointer m10'>\r\n            Account Info\r\n          </Link>\r\n          <Link to='transfer' className='pointer m10'>\r\n            Make Transfer\r\n          </Link>\r\n          <Link to='history' className='pointer m10'>\r\n            View History\r\n          </Link>\r\n        </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Bitcoin Wallet Id</Text>\r\n            <TextInput type='text' placeholder=\"Bitcoin Wallet Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.bitcoinWalletId} onChange={(event: any) => this.setState({bitcoinWalletId: event.target.value})} />\r\n          </View>         \r\n          <View style={modelStyles.row}>\r\n            <Text>Bitcoin Wallet Balance</Text>\r\n            <TextInput type='number' placeholder=\"Bitcoin Wallet Balance\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.bitcoinWalletBalance > 0 ? this.state.bitcoinWalletBalance : ''} onChange={(event: any) => this.setState({bitcoinWalletBalance: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Ethereum Wallet Id</Text>\r\n            <TextInput type='text' placeholder=\"Ethereum Wallet Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.ethereumWalletId} onChange={(event: any) => this.setState({ethereumWalletId: event.target.value})} />\r\n          </View>         \r\n          <View style={modelStyles.row}>\r\n            <Text>Ethereum Wallet Balance</Text>\r\n            <TextInput type='number' placeholder=\"Ethereum Wallet Balance\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.ethereumWalletBalance > 0 ? this.state.ethereumWalletBalance : ''} onChange={(event: any) => this.setState({ethereumWalletBalance: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Max Amount Allowed</Text>\r\n            <TextInput type='number' placeholder=\"Max Amount Allowed\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.maxAmountAllowed > 0 ? this.state.maxAmountAllowed : ''} onChange={(event: any) => this.setState({maxAmountAllowed: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput, Picker, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { IUser } from '../../models/user';\r\nimport { loadUsers, transfer } from '../../store/actions/user';\r\nimport RadioButton from '../common/radio-button';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  users: Array<IUser>,\r\n  isLoading: boolean,\r\n  currencyAmount: number,\r\n\tcurrencyType: string,\r\n\tsourceUserId: string,\r\n\ttargetUserId: string,\r\n};\r\n\r\nexport default class Transfer extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      isLoading: false,\r\n      currencyAmount: 0,\r\n      currencyType: 'BITCOIN',\r\n      sourceUserId: '',\r\n      targetUserId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId: string | null = sessionStorage.getItem('user_id');\r\n    this.setState({\r\n      sourceUserId: userId ? userId : ''\r\n    });\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadUsers((result: Array<IUser>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        users: result\r\n      });\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.currencyType) && this.state.currencyAmount > 0 && isNN(this.state.sourceUserId) && isNN(this.state.targetUserId) && this.state.sourceUserId !== this.state.targetUserId){\r\n      let hasBalance: boolean = false;\r\n      if(this.state.currencyType == 'BITCOIN'){\r\n        let bitcoinbalance: string | null = sessionStorage.getItem('user_bitcoinbalance');\r\n        hasBalance = (bitcoinbalance && parseInt(bitcoinbalance) >= this.state.currencyAmount) ? true : false;\r\n      }else{\r\n        let ethereumbalance: string | null = sessionStorage.getItem('user_ethereumbalance');\r\n        hasBalance = (ethereumbalance && parseInt(ethereumbalance) >= this.state.currencyAmount) ? true : false;\r\n      }\r\n      if(hasBalance){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        transfer(this.state.currencyAmount, this.state.currencyType, this.state.sourceUserId, this.state.targetUserId, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              currencyAmount: 0,\r\n              currencyType: 'BITCOIN',\r\n              sourceUserId: '',\r\n              targetUserId: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Transaction initiated successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to initiate transaction.');\r\n          }\r\n        });\r\n      }else{\r\n          Toast.warn('Insufficient balance in your ' + this.state.currencyType + ' account. Please update the balance and then transfer.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n        <View style={{...modelStyles.row, marginBottom: 25, borderBottom: '1px solid ' + COLOR.HR_COLOR}}>\r\n          <Link to='' className='pointer m10'>\r\n            Home\r\n          </Link>\r\n          <Link to='account' className='pointer m10'>\r\n            Account Info\r\n          </Link>\r\n          <Link to='transfer' className='pointer m10'>\r\n            Make Transfer\r\n          </Link>\r\n          <Link to='history' className='pointer m10'>\r\n            View History\r\n          </Link>\r\n        </View>\r\n          <View style={modelStyles.row}>\r\n          <Picker\r\n            className='form-control'\r\n            value={this.state.targetUserId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({ targetUserId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select a Person to Transfer</option>\r\n              {this.state.users &&\r\n                this.state.users.filter(d => d._id !== this.state.sourceUserId).map((d: IUser, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>        \r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.currencyType === 'BITCOIN'} text='Bitcoin' onPress={() => this.setState({currencyType: 'BITCOIN'})} />\r\n            <RadioButton isActive={this.state.currencyType === 'ETHEREUM'} text='Ethereum' onPress={() => this.setState({currencyType: 'ETHEREUM'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Currency Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.currencyAmount > 0 ? this.state.currencyAmount : '' } onChange={(event: any) => this.setState({currencyAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View> \r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput, Picker, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport { loadTransfers } from '../../store/actions/user';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  data: Array<any>,\r\n  userId: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      userId: '',\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId: string | null = sessionStorage.getItem('user_id');\r\n    this.setState({\r\n      userId: userId ? userId : ''\r\n    });\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadTransfers(userId ? userId : '', (result: Array<any>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result.filter(d => d.sourceUserId === this.state.userId || d.targetUserId === this.state.userId)\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n        <View style={{...modelStyles.row, marginBottom: 25, borderBottom: '1px solid ' + COLOR.HR_COLOR}}>\r\n          <Link to='' className='pointer m10'>\r\n            Home\r\n          </Link>\r\n          <Link to='account' className='pointer m10'>\r\n            Account Info\r\n          </Link>\r\n          <Link to='transfer' className='pointer m10'>\r\n            Make Transfer\r\n          </Link>\r\n          <Link to='history' className='pointer m10'>\r\n            View History\r\n          </Link>\r\n        </View>\r\n        {\r\n          isNN(this.state.data) ?\r\n          this.state.data.map((d: any, i: number) => {\r\n            return(\r\n              <View key={i} style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n                 <View>\r\n                   <Text style={{flex: 1, fontWeight: 'bold', color: this.state.userId === d.sourceUserId ? COLOR.ERROR : COLOR.SUCCESS}}>{this.state.userId === d.sourceUserId ? 'SEND' : 'RECEIVED'}</Text>\r\n                </View>\r\n                <View>\r\n                  Amount: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.currencyAmount}</Text>\r\n                </View>\r\n                <View>\r\n                  Currency Type: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.currencyType}</Text>\r\n                </View>\r\n                {this.state.userId === d.sourceUserId && \r\n                <View>\r\n                  To: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.targetUserId}</Text>\r\n                </View>\r\n                }\r\n                {this.state.userId === d.targetUserId && \r\n                <View>\r\n                  From: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.sourceUserId}</Text>\r\n                </View>\r\n                }\r\n                <View>\r\n                  On: <Text style={{flex: 1, fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {d.state &&\r\n                <View>\r\n                  Status: <Text style={{flex: 1, fontWeight: 'bold'}}>{d.state}</Text>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text>No Transactions found!!!</Text>   \r\n        }\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View } from '../common/elements';\r\nimport TitleBar from './title-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR } from '../../constants';\r\nimport Dashboard from './dashboard';\r\nimport Account from './account';\r\nimport Transfer from './transfer';\r\nimport History from './history';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TitleBar history={this.props.history} />\r\n          <Switch>\r\n            <Route path={'/'} exact component={Dashboard} />\r\n            <Route path={'/account'} exact component={Account} />\r\n            <Route path={'/transfer'} exact component={Transfer} />\r\n            <Route path={'/history'} exact component={History} />     \r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        <TabBar />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Login from '../components/login';\r\nimport Home from '../components/home';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n  isLoggedIn: boolean\r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.setState({\r\n        isLoggedIn: true\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.state.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home history={this.props.history} />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","\r\nimport React from 'react';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport AppContainer from './components/app-container';\r\n// import FCM from './services/fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\nimport * as history  from 'history';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return(<>\r\n            <AppContainer history={history.createBrowserHistory()} />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </>      \r\n        )\r\n    }\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}