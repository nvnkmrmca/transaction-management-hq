{"version":3,"sources":["components/common/elements.tsx","constants/index.ts","components/home/title-bar.tsx","components/home/tab-bar.tsx","styles/card.ts","util/index.ts","store/api/api.ts","store/actions/product.ts","components/home/dashboard.tsx","components/not-found/index.tsx","components/home/index.tsx","components/app-container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["View","styled","div","_templateObject","Text","_templateObject2","img","_templateObject3","input","_templateObject4","textarea","_templateObject5","select","_templateObject6","label","_templateObject7","COLOR","span","_templateObject8","TitleBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react","className","style","styles","titleBar","marginLeft","titleText","React","backgroundColor","color","width","padding","flex","fontSize","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","marginTop","paddingTop","paddingBottom","container","marginBottom","borderBottomColor","borderBottomWidth","border-bottom-style","row","card","justifyContent","alignItems","borderRadius","margin","inner","txt","height","isNN","_input","isNNObject","length","undefined","json2Str","JSON","stringify","ex","jsError","_ex","_funName","console","log","Api","url","get","callback","fetch","post","data","delete","patch","put","upload","token","clientId","userId","formData","regenerator_default","a","async","_context","prev","next","awrap","getAS","sent","FormData","append","file","name","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","error","toString","stop","key","_context2","sessionStorage","getItem","abrupt","t0","_context3","Content-Type","loadTypes","website","isBrand","controller","result","loadProducts","type","productType","Dashboard","onWebsiteChange","setState","types","products","onTypeChange","isLoading","onTypesChange","websites","_this2","_this3","content","cardStyles","onChange","e","target","value","map","d","i","defaultValue","objectSpread2","fontWeight","price","mrp","packingQty","moq","discount","brand","href","categoryPath","tab","activeTab","Index","title_bar_TitleBar","react_router","path","exact","component","NotFound","tab_bar_TabBar","AppContainer","react_router_dom","home_Index","history","App","react_default","createElement","Fragment","app_container_AppContainer","lib","store","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0349c60.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","const API_BASE_PATH = 'https://mcurrency.herokuapp.com/';\r\n// const API_BASE_PATH = 'http://localhost:3001/';\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Text, Image } from '../common/elements';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n\r\n  render() { \r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n          <Text className='fl' style={{marginLeft: '10px'}}>Pricing intelligence Portal</Text>\r\n          <Text style={styles.titleText}>{'Hi welcome!!!'}</Text>\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    width: '100%',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    fontSize: 15\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Pricing intelligence Protal</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: 25,\r\n    height: 25,\r\n    margin: 5\r\n  }\r\n};\r\n  ","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","import Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'product';\r\n\r\nexport const loadWebsites = (callback: (result: Array<any>, message: string) => void) => {\r\n  new Api().get(controller + '/websites', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadTypes = (website: string, isBrand: boolean, callback: (result: Array<any>, message: string) => void) => {\r\n  new Api().get(controller + '/' + (isBrand ? 'brands' : 'categories') + '/' + website, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadProducts = (website: string, isBrand: boolean, type: string, callback: (result: Array<any>, message: string) => void) => {\r\n  console.log(isBrand)\r\n  new Api().post(controller + 's', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback(result.data, '');\r\n    }else{\r\n      callback([], message);\r\n    }\r\n  }, {\r\n    website: website,\r\n    productType: (isBrand ? 'brand' : 'category'),\r\n    type: type\r\n  });\r\n};","import * as React from 'react';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport { loadWebsites, loadTypes, loadProducts } from '../../store/actions/product';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  websites: Array<string>,\r\n  website: string,\r\n  isBrand: boolean,\r\n  productType: string,\r\n  types: Array<any>,\r\n  type: string,\r\n  products: Array<any>\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      websites: [],\r\n      website: '',\r\n      isBrand: true,\r\n      productType: '',\r\n      types: [],\r\n      type: '',\r\n      products: []\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    loadWebsites((result: Array<any>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        websites: result\r\n      });\r\n    });\r\n  };\r\n  \r\n  onWebsiteChange = (website: string) => {\r\n    this.setState({\r\n      website: website,\r\n      isBrand: true,\r\n      productType: '',\r\n      types: [],\r\n      type: '',\r\n      products: []\r\n    });\r\n  };\r\n\r\n  onTypeChange = (type: string) => {\r\n    this.setState({\r\n      isBrand: (type === 'brand'),\r\n      productType: type,\r\n      type: '',\r\n      types:[],\r\n      products: [],\r\n      isLoading: true\r\n  });\r\n    loadTypes(this.state.website, (type === 'brand'), (result: Array<any>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        types: result\r\n      });\r\n    });\r\n  };\r\n\r\n  onTypesChange = (type: string) => {\r\n    this.setState({\r\n      type: type,\r\n      products: [],\r\n      isLoading: true\r\n  });\r\n    loadProducts(this.state.website, this.state.isBrand, type, (result: Array<any>, message: string) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        products: result\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n          <View style={cardStyles.row}>\r\n            <select onChange={(e) => this.onWebsiteChange(e.target.value)}>\r\n              <option value=''>Select Website</option>\r\n              {(this.state.websites && this.state.websites.length > 0) &&\r\n              this.state.websites.map((d, i) => {\r\n                return(\r\n                  <option value={d}>{d}</option>\r\n                );\r\n              })\r\n              }\r\n            </select>     \r\n          </View>\r\n          <View style={cardStyles.row}>\r\n            <select defaultValue={this.state.productType} onChange={(e) => this.onTypeChange(e.target.value)}>\r\n              <option value=''>Select Brand/Category</option>\r\n              <option value='brand'>Brand</option>\r\n              <option value='category'>Category</option>\r\n            </select>\r\n          </View>\r\n          <View style={cardStyles.row}>\r\n            <select onChange={(e) => this.onTypesChange(e.target.value)}>\r\n              <option value=''>{'Select ' + (this.state.isBrand ? 'Brand' : 'Category')}</option>\r\n              {(this.state.types && this.state.types.length > 0) &&\r\n              this.state.types.map((d, i) => {\r\n                return(\r\n                  <option value={d}>{d}</option>\r\n                );\r\n              })\r\n              }\r\n            </select>\r\n          </View>\r\n          {(this.state.products && this.state.products.length > 0)&&\r\n          <View style={{...cardStyles.row}}>\r\n            <View>\r\n              <label style={{fontWeight: 'bold', marginBottom: 15}}>Products</label>\r\n            </View>\r\n          {this.state.products.map((d, i) => {\r\n            return(\r\n              <View style={{marginBottom: 15}}>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Product Name: </label>\r\n                  <label>{d.name}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Price: </label>\r\n                  <label>{d.price}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>MRP: </label>\r\n                  <label>{d.mrp}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Packing Qty: </label>\r\n                  <label>{d.packingQty}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>MOQ: </label>\r\n                  <label>{d.moq}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Discount: </label>\r\n                  <label>{d.discount}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Brand: </label>\r\n                  <label>{d.brand}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Category: </label>\r\n                  <label>{d.packingQty}</label>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>URL: </label>\r\n                  <a href={d.url}>{d.url}</a>\r\n                </View>\r\n                <View>\r\n                  <label style={{fontWeight: 'bold'}}>Category Path: </label>\r\n                  <a href={d.categoryPath}>{d.categoryPath}</a>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          }\r\n        </View>\r\n          }\r\n        </View>\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View } from '../common/elements';\r\nimport TitleBar from './title-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR } from '../../constants';\r\nimport Dashboard from './dashboard';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TitleBar />\r\n          <Switch>\r\n            <Route path={'/'} exact component={Dashboard} />\r\n            {/* <Route path={'/account'} exact component={Account} />\r\n            <Route path={'/transfer'} exact component={Transfer} />\r\n            <Route path={'/history'} exact component={History} /> */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        <TabBar />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Home from '../components/home';\r\n\r\ninterface IProps {\r\n  history: any\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n          <HashRouter>\r\n            <Home history={this.props.history} />\r\n          </HashRouter>\r\n    )\r\n  }\r\n};","\r\nimport React from 'react';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport AppContainer from './components/app-container';\r\n// import FCM from './services/fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\nimport * as history  from 'history';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return(<>\r\n            <AppContainer history={history.createBrowserHistory()} />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </>      \r\n        )\r\n    }\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}